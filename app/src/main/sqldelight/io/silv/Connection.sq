import io.silv.oflchat.core.model.ConnectionEntity;
import kotlin.Boolean;
import kotlinx.datetime.Instant;

CREATE TABLE Connection (
    endpoint_id TEXT NOT NULL,
    user_id TEXT NOT NULL,
    user_name TEXT NOT NULL,
    last_update_date INTEGER AS Instant NOT NULL,
    status TEXT AS ConnectionEntity.State NOT NULL DEFAULT 'NOT_CONNECTED',
    should_notify INTEGER AS Boolean DEFAULT 1,
    PRIMARY KEY (endpoint_id, user_id)
);

insert:
INSERT OR REPLACE INTO Connection(endpoint_id, user_id, user_name, last_update_date, status, should_notify)
VALUES (?, ?, ?, ?, ?, ?);

update:
UPDATE Connection SET
    user_id = COALESCE(:userId, user_id),
    user_name = COALESCE(:username, user_name),
    last_update_date = COALESCE(:lastUpdateDate, last_update_date),
    status = COALESCE(:status, status),
    should_notify = COALESCE(:shouldNotify, should_notify)
WHERE endpoint_id = :id;

selectByEndpointId:
SELECT * FROM Connection WHERE endpoint_id = ?;

selectByUserId:
SELECT * FROM Connection WHERE user_id = ?;

lastInsertRowId:
SELECT last_insert_rowid();

selectAll:
SELECT * FROM Connection;

clear:
DELETE FROM Connection;